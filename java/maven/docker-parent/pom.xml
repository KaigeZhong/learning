<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>maven</artifactId>
        <groupId>maven</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>docker-parent</artifactId>
    <packaging>pom</packaging>
    <modules>
        <module>docker</module>
    </modules>

    <properties>
        <dockerfile-maven-plugin.version>1.3.6</dockerfile-maven-plugin.version>
    </properties>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <!--此插件是基于dockerfile-maven
                    spotify建议使用dockerfile-maven，而docker-maven-plugin已不再更新
                    -->
                    <groupId>com.spotify</groupId>
                    <artifactId>dockerfile-maven-plugin</artifactId>
                    <version>${dockerfile-maven-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>default</id>
                            <goals>
                                <goal>build</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <!--
                        docker build -t=name:tag
                        相当于name:tag中的tag
                        -->
                        <tag>${project.version}</tag>

                        <!--
                            docker build -t=name:tag
                            相当于name:tag中的name

                            project.artifactId的读取会是在实际插件配置的地方,这里读取到的是docker而不是docker-parent
                        -->
                        <repository>mine/${project.artifactId}</repository>

                        <!--相当于docker build的build-args参数
                       需要注意的是采取build-args定义的参数是需要在dockerfile文件中定义对应的相同名字的arg来接收build-args参数
                       所以这里我们需要在dockerfile加入ARG JAR_FILE

                        -->
                        <buildArgs>
                            <JAR_FILE>${project.build.finalName}.jar</JAR_FILE>
                        </buildArgs>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

</project>